/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role=list],
ol[role=list] {
  list-style: none;
}

ul {
  padding: 0;
  margin: 0;
}

li {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
*::before,
*::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.sr__only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  /* added line */
  border: 0;
}

.theme-light {
  background-color: #f3f5f7;
  color: #19212e;
}
.theme-light .card__holder {
  background-color: #1d222a;
}
.theme-light input {
  background-color: #1d222a;
  color: #19212e;
}
.theme-light .optional__search {
  background-color: #1d222a;
}
.theme-light .search__form {
  background-color: #1d222a;
}

.theme-dark {
  background-color: #121721;
  color: white;
}
.theme-dark .card__holder {
  background-color: #1d222a;
}
.theme-dark input {
  background-color: #1d222a;
  color: white;
}
.theme-dark .optional__search {
  background-color: #1d222a;
}
.theme-dark .search__form {
  background-color: #1d222a;
}

/* 
  get rid of the fieldset styling and keep 
  this all on a single line 
*/
.radio-switch {
  border: none;
  padding: 0;
  white-space: nowrap;
}

/*
    radio button groups often benefit from a legend to
    provide context as to what the different
    options pertain to. Ideally this would be visible to all
    users, but you know...
  */
.radio-switch legend {
  font-size: 2px;
  opacity: 0;
  position: absolute;
}

/*
    relative labels to help position the pseudo elements
    the z-index will be handy later, when the labels that
    overlap the visual switch UI need to be adjusted
    to allow for a user to toggle the switch without
    having to move their mouse/finger to the different
    sides of the UI
  */
.radio-switch label {
  display: inline-block;
  line-height: 2;
  position: relative;
  z-index: 2;
}

/*
    inputs set to opcacity 0 are still accessible.
    Apparently there can be issues targetting inputs with
    Dragon speech recognition software if you use the typical
    'visually-hidden' class...so might as well just avoid that issue...
  */
.radio-switch input {
  opacity: 0;
  position: absolute;
}

/*
    a 2 option toggle can only have 2 options...so instead of
    adding more classes, i'm just going to use some
    structural pseudo-classes to target them...
    cause why let all that good work go to waste?!

    the large padding is used to position the labels
    on top of the visual UI, so the switch UI itself
    can be mouse clicked or finger tapped to toggle
    the current option
  */
.radio-switch label:first-of-type {
  padding-right: 5em;
}

.radio-switch label:last-child {
  margin-left: -4.25em;
  padding-left: 5em;
}

/*
    oh focus within, I can't wait for you to have even more support.
    But you'll never be in IE11, so we're going to need a
    polyfill for you for a bit...
   */
.radio-switch:focus-within label:first-of-type:after {
  box-shadow: 0 0 0 2px #fff, 0 0 0 4px #2196f3;
}

/* polyfill class*/
.radio-switch.focus-within label:first-of-type:after {
  box-shadow: 0 0 0 2px #fff, 0 0 0 4px #2196f3;
}

/* making the switch UI.  */
.radio-switch label:first-of-type:before,
.radio-switch label:first-of-type:after {
  border: 1px solid #aaa;
  content: "";
  height: 1.8em;
  overflow: hidden;
  pointer-events: none;
  position: absolute;
  vertical-align: middle;
}

.radio-switch label:first-of-type:before {
  background: #5964e0;
  border: 1px solid #aaa;
  border-radius: 100%;
  position: absolute;
  right: -0.075em;
  transform: translateX(0em);
  transition: transform 0.2s ease-in-out;
  width: 2em;
  z-index: 2;
}

.radio-switch label:first-of-type:after {
  background-color: #ffffff;
  border-radius: 1em;
  margin: 0 1em;
  transition: background 0.2s ease-in-out;
  width: 4em;
}

/*
    Visually change the switch UI to match the
    checked state of the first radio button
  */
.radio-switch input:first-of-type:checked ~ label:first-of-type:after {
  background-color: #ffffff;
}

.radio-switch input:first-of-type:checked ~ label:first-of-type:before {
  transform: translateX(-2em);
}

/* Move the 2nd label to have a lower z-index, so when that
     option is toggled, the first label will overlay on top of the
     Switch ui, and the switch can be pressed again to toggle back
     to the prevoius state. */
.radio-switch input:last-of-type:checked ~ label:last-of-type {
  z-index: 1;
}

.theme__img {
  display: inline;
}

.app__title--btn:hover, .app__title--btn:focus {
  cursor: pointer;
  outline: dashed currentColor;
  outline-offset: 0.25em;
}

.card__holder {
  border-radius: 6px;
  background-color: white;
}

.card {
  padding: 2rem 1rem;
  position: relative;
}

.cards__list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 3rem 1rem;
}

.card__img__holder {
  width: 50px;
  height: 50px;
  border-radius: 15px;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: -2rem;
}

.span__contract {
  position: relative;
  margin-left: 1rem;
}
.span__contract::before {
  position: absolute;
  content: "";
  width: 0.5rem;
  height: 0.5rem;
  background-color: #6d7f97;
  border-radius: 50%;
  top: 50%;
  left: -0.7rem;
}

.card__details {
  margin-top: 1rem;
}

.card__title {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.card__link {
  text-decoration: none;
}

.card--location {
  margin: 2rem auto 1rem;
  font-weight: 700;
}

.search__form {
  position: relative;
  top: -3rem;
  border-radius: 6px;
}
@media screen and (min-width: 42.5rem) {
  .search__form {
    display: flex;
  }
}

.input__container {
  position: relative;
  border: 1px solid transparent;
}
@media screen and (min-width: 42.5rem) {
  .input__container {
    border: none;
  }
}

@media screen and (min-width: 42.5rem) {
  .title__filter__holder {
    flex: 1 1 33.3%;
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
  }
}

.optional__search {
  position: absolute;
  display: none;
  background-color: white;
  width: 100%;
  top: 10rem;
  box-shadow: 2px 2px 3px 4px lightgray;
  border-radius: 6px;
  z-index: 1;
}
@media screen and (min-width: 42.5rem) {
  .optional__search {
    position: relative;
    box-shadow: none;
    top: 0;
    flex: 2 1 66.6%;
    display: flex;
    justify-content: flex-start;
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
  }
}

.open__options {
  display: block;
}
@media screen and (min-width: 42.5rem) {
  .open__options {
    display: flex;
  }
}

.input__search {
  font-size: 1rem;
  outline: 0;
  padding: 1.8rem 1rem;
  width: 100%;
  border: 1px solid transparent;
  border-radius: 6px;
  /*
  &:hover,
  &:focus {
    cursor: pointer;
    outline: dashed currentColor;
    outline-offset: 0.25em;
  }*/
}
.input__search:hover, .input__search:focus {
  cursor: pointer;
  outline: dashed currentColor;
  outline-offset: 0.25em;
}
@media screen and (min-width: 42.5rem) {
  .input__search {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
  }
}

.time__filter {
  /* &:hover,
  &:focus {
    cursor: pointer;
    outline: dashed currentColor;
    outline-offset: 0.25em;
  }*/
}
.time__filter:hover, .time__filter:focus {
  cursor: pointer;
  outline: dashed currentColor;
  outline-offset: 0.25em;
}

.input__search__loc {
  padding: 1.8rem 3rem;
  /* &:hover,
  &:focus {
    cursor: pointer;
    outline: dashed currentColor;
    outline-offset: 0.25em;
  }*/
}
.input__search__loc:hover, .input__search__loc:focus {
  cursor: pointer;
  outline: dashed currentColor;
  outline-offset: 0.25em;
}

.search--btn {
  position: absolute;
  background-color: #5964E0;
  border: none;
  outline: none;
  right: 1rem;
  top: 30%;
  border-radius: 6px;
  /*
    &:hover,
    &:focus {
      cursor: pointer;
      outline: dashed currentColor;
      outline-offset: 0.25em;
    }
  */
}
.search--btn:hover, .search--btn:focus {
  cursor: pointer;
  outline: dashed currentColor;
  outline-offset: 0.25em;
}
.search--btn .search__img {
  padding: 0.5rem;
}

.open__options--btn {
  border: none;
  background-color: inherit;
  position: absolute;
  right: 6rem;
  top: 45%;
  /*
  &:hover,
  &:focus {
    cursor: pointer;
    outline: dashed currentColor;
    outline-offset: 0.25em;
  }*/
}
.open__options--btn:hover, .open__options--btn:focus {
  cursor: pointer;
  outline: dashed currentColor;
  outline-offset: 0.25em;
}
@media screen and (min-width: 42.5rem) {
  .open__options--btn {
    display: none;
  }
}

.input__label {
  position: absolute;
  font-size: 1rem;
  transform-origin: top left;
  transform: translate(1rem, 1.5rem) scale(1);
  transition: all 0.1s ease-in-out;
}
@media screen and (min-width: 42.5rem) {
  .input__label {
    transform: translate(3rem, 2rem) scale(1);
  }
}

.input__label__search {
  transform: translate(3rem, 2rem) scale(1);
  /* @media screen and (min-width: 42.5rem) {
    transform: translate(3rem, 2rem) scale(1);
  }*/
}

.input__container.active label {
  transform: translate(1rem, 0.25rem) scale(0.75);
}

.location__img {
  position: absolute;
  top: 40%;
  left: 1rem;
}

.full__search--btn {
  display: block;
  margin: 2rem auto;
  width: 80%;
  padding: 1rem;
  max-width: 10.5rem;
  background-color: #5964E0;
  color: white;
  border: none;
  border-radius: 6px;
  font-weight: 800;
}
.full__search--btn:hover, .full__search--btn:focus {
  cursor: pointer;
  outline: dashed #5964E0;
  outline-offset: 0.25em;
}
@media screen and (min-width: 42.5rem) {
  .full__search--btn {
    position: absolute;
    right: 0;
    max-width: 5.25rem;
    margin: 1rem;
  }
}

.location__filter__time {
  border-top: 1px solid #1d222a;
  padding: 1rem;
}
@media screen and (min-width: 42.5rem) {
  .location__filter__time {
    flex: 1 1 50%;
    border-top: none;
    display: flex;
    align-items: center;
  }
}

@media screen and (min-width: 42.5rem) {
  .location__filter__holder {
    flex: 1 1 50%;
    border-left: 1px solid #f3f5f7;
    border-right: 1px solid #f3f5f7;
  }
}

.job__require__item {
  list-style: disc;
}

.job__role__item {
  list-style: decimal;
}

.header {
  background-image: url("../../assets/mobile/bg-pattern-header.svg");
  background-repeat: no-repeat;
  background-size: cover;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2rem 1.5rem 4.5rem;
}

.main {
  padding: 0.5rem 1.5rem;
  margin: auto;
  max-width: 69.375rem;
  position: relative;
}

body {
  background-color: #f3f5f7;
  color: #19212e;
  font-family: "Kumbh Sans", sans-serif;
}

.text-primary {
  color: #326def;
}

.text-secondary {
  color: #1ac888;
}

.text-error {
  color: #d32752;
}

.text-info {
  color: #f6c31c;
}

.text-white {
  color: #ffffff;
}
